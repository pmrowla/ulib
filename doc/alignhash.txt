The use of aligned hashings is similiar to STL's hash_map/hash_set
class. So here I just write down major differences.

align_hash_map for example, requires two template parameters as Key
and Value types. Unlike STL's hash_map, where additional euqual
function and hasher can be provided, align_hash_map doesn't
have such parameters. These two functionalities are expected to be
part of Key classes, that is, == operator and size_t operator.

Another change worthy of note is the iterator. In STL-like Key-Value
containers, two members first and second are respectively refered as
Key and Value. While align_hash_map and align_hash_set don't follow
this rule for memory saving purpose. Instead, Key and Values are
refered by key() and value() member functions of iterator.

For sample use, please check test_alignhash.cpp in test/.
